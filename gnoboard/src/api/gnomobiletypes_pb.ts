// @generated by protoc-gen-es v1.3.1 with parameter "target=ts"
// @generated from file gnomobiletypes.proto (package land.gno.gnomobile.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * messages
 *
 * @generated from message land.gno.gnomobile.v1.SetRemote_Request
 */
export class SetRemote_Request extends Message<SetRemote_Request> {
  /**
   * @generated from field: string Remote = 1;
   */
  Remote = "";

  constructor(data?: PartialMessage<SetRemote_Request>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "land.gno.gnomobile.v1.SetRemote_Request";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "Remote", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetRemote_Request {
    return new SetRemote_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetRemote_Request {
    return new SetRemote_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetRemote_Request {
    return new SetRemote_Request().fromJsonString(jsonString, options);
  }

  static equals(a: SetRemote_Request | PlainMessage<SetRemote_Request> | undefined, b: SetRemote_Request | PlainMessage<SetRemote_Request> | undefined): boolean {
    return proto3.util.equals(SetRemote_Request, a, b);
  }
}

/**
 * @generated from message land.gno.gnomobile.v1.SetRemote_Reply
 */
export class SetRemote_Reply extends Message<SetRemote_Reply> {
  constructor(data?: PartialMessage<SetRemote_Reply>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "land.gno.gnomobile.v1.SetRemote_Reply";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetRemote_Reply {
    return new SetRemote_Reply().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetRemote_Reply {
    return new SetRemote_Reply().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetRemote_Reply {
    return new SetRemote_Reply().fromJsonString(jsonString, options);
  }

  static equals(a: SetRemote_Reply | PlainMessage<SetRemote_Reply> | undefined, b: SetRemote_Reply | PlainMessage<SetRemote_Reply> | undefined): boolean {
    return proto3.util.equals(SetRemote_Reply, a, b);
  }
}

/**
 * @generated from message land.gno.gnomobile.v1.SetChainID_Request
 */
export class SetChainID_Request extends Message<SetChainID_Request> {
  /**
   * @generated from field: string ChainID = 1;
   */
  ChainID = "";

  constructor(data?: PartialMessage<SetChainID_Request>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "land.gno.gnomobile.v1.SetChainID_Request";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ChainID", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetChainID_Request {
    return new SetChainID_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetChainID_Request {
    return new SetChainID_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetChainID_Request {
    return new SetChainID_Request().fromJsonString(jsonString, options);
  }

  static equals(a: SetChainID_Request | PlainMessage<SetChainID_Request> | undefined, b: SetChainID_Request | PlainMessage<SetChainID_Request> | undefined): boolean {
    return proto3.util.equals(SetChainID_Request, a, b);
  }
}

/**
 * @generated from message land.gno.gnomobile.v1.SetChainID_Reply
 */
export class SetChainID_Reply extends Message<SetChainID_Reply> {
  constructor(data?: PartialMessage<SetChainID_Reply>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "land.gno.gnomobile.v1.SetChainID_Reply";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetChainID_Reply {
    return new SetChainID_Reply().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetChainID_Reply {
    return new SetChainID_Reply().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetChainID_Reply {
    return new SetChainID_Reply().fromJsonString(jsonString, options);
  }

  static equals(a: SetChainID_Reply | PlainMessage<SetChainID_Reply> | undefined, b: SetChainID_Reply | PlainMessage<SetChainID_Reply> | undefined): boolean {
    return proto3.util.equals(SetChainID_Reply, a, b);
  }
}

/**
 * @generated from message land.gno.gnomobile.v1.SetNameOrBech32_Request
 */
export class SetNameOrBech32_Request extends Message<SetNameOrBech32_Request> {
  /**
   * @generated from field: string NameOrBech32 = 1;
   */
  NameOrBech32 = "";

  constructor(data?: PartialMessage<SetNameOrBech32_Request>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "land.gno.gnomobile.v1.SetNameOrBech32_Request";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "NameOrBech32", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetNameOrBech32_Request {
    return new SetNameOrBech32_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetNameOrBech32_Request {
    return new SetNameOrBech32_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetNameOrBech32_Request {
    return new SetNameOrBech32_Request().fromJsonString(jsonString, options);
  }

  static equals(a: SetNameOrBech32_Request | PlainMessage<SetNameOrBech32_Request> | undefined, b: SetNameOrBech32_Request | PlainMessage<SetNameOrBech32_Request> | undefined): boolean {
    return proto3.util.equals(SetNameOrBech32_Request, a, b);
  }
}

/**
 * @generated from message land.gno.gnomobile.v1.SetNameOrBech32_Reply
 */
export class SetNameOrBech32_Reply extends Message<SetNameOrBech32_Reply> {
  constructor(data?: PartialMessage<SetNameOrBech32_Reply>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "land.gno.gnomobile.v1.SetNameOrBech32_Reply";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetNameOrBech32_Reply {
    return new SetNameOrBech32_Reply().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetNameOrBech32_Reply {
    return new SetNameOrBech32_Reply().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetNameOrBech32_Reply {
    return new SetNameOrBech32_Reply().fromJsonString(jsonString, options);
  }

  static equals(a: SetNameOrBech32_Reply | PlainMessage<SetNameOrBech32_Reply> | undefined, b: SetNameOrBech32_Reply | PlainMessage<SetNameOrBech32_Reply> | undefined): boolean {
    return proto3.util.equals(SetNameOrBech32_Reply, a, b);
  }
}

/**
 * @generated from message land.gno.gnomobile.v1.SetPassword_Request
 */
export class SetPassword_Request extends Message<SetPassword_Request> {
  /**
   * @generated from field: string Password = 1;
   */
  Password = "";

  constructor(data?: PartialMessage<SetPassword_Request>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "land.gno.gnomobile.v1.SetPassword_Request";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "Password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetPassword_Request {
    return new SetPassword_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetPassword_Request {
    return new SetPassword_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetPassword_Request {
    return new SetPassword_Request().fromJsonString(jsonString, options);
  }

  static equals(a: SetPassword_Request | PlainMessage<SetPassword_Request> | undefined, b: SetPassword_Request | PlainMessage<SetPassword_Request> | undefined): boolean {
    return proto3.util.equals(SetPassword_Request, a, b);
  }
}

/**
 * @generated from message land.gno.gnomobile.v1.SetPassword_Reply
 */
export class SetPassword_Reply extends Message<SetPassword_Reply> {
  constructor(data?: PartialMessage<SetPassword_Reply>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "land.gno.gnomobile.v1.SetPassword_Reply";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetPassword_Reply {
    return new SetPassword_Reply().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetPassword_Reply {
    return new SetPassword_Reply().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetPassword_Reply {
    return new SetPassword_Reply().fromJsonString(jsonString, options);
  }

  static equals(a: SetPassword_Reply | PlainMessage<SetPassword_Reply> | undefined, b: SetPassword_Reply | PlainMessage<SetPassword_Reply> | undefined): boolean {
    return proto3.util.equals(SetPassword_Reply, a, b);
  }
}

/**
 * @generated from message land.gno.gnomobile.v1.GenerateRecoveryPhrase_Request
 */
export class GenerateRecoveryPhrase_Request extends Message<GenerateRecoveryPhrase_Request> {
  constructor(data?: PartialMessage<GenerateRecoveryPhrase_Request>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "land.gno.gnomobile.v1.GenerateRecoveryPhrase_Request";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateRecoveryPhrase_Request {
    return new GenerateRecoveryPhrase_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateRecoveryPhrase_Request {
    return new GenerateRecoveryPhrase_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateRecoveryPhrase_Request {
    return new GenerateRecoveryPhrase_Request().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateRecoveryPhrase_Request | PlainMessage<GenerateRecoveryPhrase_Request> | undefined, b: GenerateRecoveryPhrase_Request | PlainMessage<GenerateRecoveryPhrase_Request> | undefined): boolean {
    return proto3.util.equals(GenerateRecoveryPhrase_Request, a, b);
  }
}

/**
 * @generated from message land.gno.gnomobile.v1.GenerateRecoveryPhrase_Reply
 */
export class GenerateRecoveryPhrase_Reply extends Message<GenerateRecoveryPhrase_Reply> {
  /**
   * @generated from field: string Phrase = 1;
   */
  Phrase = "";

  constructor(data?: PartialMessage<GenerateRecoveryPhrase_Reply>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "land.gno.gnomobile.v1.GenerateRecoveryPhrase_Reply";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "Phrase", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateRecoveryPhrase_Reply {
    return new GenerateRecoveryPhrase_Reply().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateRecoveryPhrase_Reply {
    return new GenerateRecoveryPhrase_Reply().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateRecoveryPhrase_Reply {
    return new GenerateRecoveryPhrase_Reply().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateRecoveryPhrase_Reply | PlainMessage<GenerateRecoveryPhrase_Reply> | undefined, b: GenerateRecoveryPhrase_Reply | PlainMessage<GenerateRecoveryPhrase_Reply> | undefined): boolean {
    return proto3.util.equals(GenerateRecoveryPhrase_Reply, a, b);
  }
}

/**
 * @generated from message land.gno.gnomobile.v1.Query_Request
 */
export class Query_Request extends Message<Query_Request> {
  /**
   * @generated from field: string Path = 1;
   */
  Path = "";

  /**
   * @generated from field: bytes Data = 2;
   */
  Data = new Uint8Array(0);

  constructor(data?: PartialMessage<Query_Request>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "land.gno.gnomobile.v1.Query_Request";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "Path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "Data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Query_Request {
    return new Query_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Query_Request {
    return new Query_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Query_Request {
    return new Query_Request().fromJsonString(jsonString, options);
  }

  static equals(a: Query_Request | PlainMessage<Query_Request> | undefined, b: Query_Request | PlainMessage<Query_Request> | undefined): boolean {
    return proto3.util.equals(Query_Request, a, b);
  }
}

/**
 * @generated from message land.gno.gnomobile.v1.Query_Reply
 */
export class Query_Reply extends Message<Query_Reply> {
  /**
   * @generated from field: bytes Result = 1;
   */
  Result = new Uint8Array(0);

  constructor(data?: PartialMessage<Query_Reply>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "land.gno.gnomobile.v1.Query_Reply";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "Result", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Query_Reply {
    return new Query_Reply().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Query_Reply {
    return new Query_Reply().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Query_Reply {
    return new Query_Reply().fromJsonString(jsonString, options);
  }

  static equals(a: Query_Reply | PlainMessage<Query_Reply> | undefined, b: Query_Reply | PlainMessage<Query_Reply> | undefined): boolean {
    return proto3.util.equals(Query_Reply, a, b);
  }
}

/**
 * @generated from message land.gno.gnomobile.v1.Call_Request
 */
export class Call_Request extends Message<Call_Request> {
  /**
   * @generated from field: string PackagePath = 1;
   */
  PackagePath = "";

  /**
   * @generated from field: string Fnc = 2;
   */
  Fnc = "";

  /**
   * @generated from field: repeated string Args = 3;
   */
  Args: string[] = [];

  /**
   * @generated from field: string GasFee = 4;
   */
  GasFee = "";

  /**
   * @generated from field: sint64 GasWanted = 5;
   */
  GasWanted = protoInt64.zero;

  /**
   * @generated from field: string Send = 6;
   */
  Send = "";

  /**
   * @generated from field: string Memo = 7;
   */
  Memo = "";

  constructor(data?: PartialMessage<Call_Request>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "land.gno.gnomobile.v1.Call_Request";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "PackagePath", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "Fnc", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "Args", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 4, name: "GasFee", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "GasWanted", kind: "scalar", T: 18 /* ScalarType.SINT64 */ },
    { no: 6, name: "Send", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "Memo", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Call_Request {
    return new Call_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Call_Request {
    return new Call_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Call_Request {
    return new Call_Request().fromJsonString(jsonString, options);
  }

  static equals(a: Call_Request | PlainMessage<Call_Request> | undefined, b: Call_Request | PlainMessage<Call_Request> | undefined): boolean {
    return proto3.util.equals(Call_Request, a, b);
  }
}

/**
 * @generated from message land.gno.gnomobile.v1.Call_Reply
 */
export class Call_Reply extends Message<Call_Reply> {
  /**
   * @generated from field: bytes Result = 1;
   */
  Result = new Uint8Array(0);

  constructor(data?: PartialMessage<Call_Reply>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "land.gno.gnomobile.v1.Call_Reply";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "Result", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Call_Reply {
    return new Call_Reply().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Call_Reply {
    return new Call_Reply().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Call_Reply {
    return new Call_Reply().fromJsonString(jsonString, options);
  }

  static equals(a: Call_Reply | PlainMessage<Call_Reply> | undefined, b: Call_Reply | PlainMessage<Call_Reply> | undefined): boolean {
    return proto3.util.equals(Call_Reply, a, b);
  }
}

